{
    "labels": {
        "home": "Home",
        "about": "About",
        "english": "英文",
        "chinese": "中文",
        "beginner": "Beginner",
        "advanced": "Major Tutorial",
        "quiz": "Quiz",
        "start": "Start",
        "tutorial": "Tutorial List.",
        "textFieldLabel": "Input here...",
        "run": "Run"
    },
    "home": {
        "intro_1": "Learn the blockchain basics in",
        "intro_2": "BC Amateur.",
        "intro_3": "BC Amateur is an online learning platform providing free tutorials for learning blockchain.",
        "intro_4": "Select tutorial",
        "description_1": "Introducing the blockchain.",
        "description_2": "Learning rationale behind of the blockchain technology with typical Bitcoin-like blockchain example.",
        "description_3": "Challenge yourself with a short quiz. You will have 30 seconds for answering each question!"
    },
    "tutorial_1": { 
        "title": "1. Hash Value & Function",
        "subTitle_1": "1.1 Introduction",
        "subTitle_2": "1.2 Properties",
        "subTitle_3": "1.3 Applicability",
        "paragraph_1_1": "Hash value is generated by a hash function, which is a non-semantic output with a fixed-length. It is just like an ID for that specific input.",
        "paragraph_2_1": "Here is a hash value generator using the hash function SHA256, let's try to input something and check for the hashed result!",
        "paragraph_2_2": "What is your discoveries?",
        "paragraph_2_3": "You may found out that a hash value has the following properties:",
        "paragraph_2_4": "(1) Fixed Length",
        "paragraph_2_4_1": "Hash function will generate a fixed length output, this would not be affected by the input value and the length of the input value. In the above hash function SHA256, it always produce a 256 bits output value. As the output value is represented in hexadecimal form and a hexadecimal digit contains 4 bits, the digit length of the hash function SHA256 output will be 64.",
        "paragraph_2_5": "(2) Collision Resistance",
        "paragraph_2_5_1": "Hash function is resistance against collision, having two identical output values from a hash function like SHA-256 using different inputs is imposible to be found. Two different input will result in two different ouput.",
        "paragraph_2_6": "(3) Same input result in same output",
        "paragraph_2_6_1": "Hash function will guarantee to generate the same output value with the same input value. For example, the hash value(SHA-256) of the word 'Hash' is 'a91069147f9bd9245cdacaef8ead4c3578ed44f179d7eb6bd4690e62ba4658f2'. When using the same hash function, the output value of a specific input is constant.",
        "paragraph_2_7": "(4) Hiding",
        "paragraph_2_7_1": "Hash function will generate an output which does not contain any trail of the original input values, it is impossible to figure out the input value using the output hash value because a hash function does not generate value simply by replacing the alphabet.",
        "paragraph_3_1": "A Blockchain system applies Hash in different parts, the major parts are as follows.",
        "paragraph_3_2": "(1) Chaining the blocks",
        "paragraph_3_3": "(2) The Merkle Tree",
        "paragraph_3_4": "More will be explained in other chapters.",
        "hash_value": "The hash value of your input is: "
    },
    "tutorial_2": {
        "title": "2. Blockchain Basic Structure",
        "header_1": "Nonce",
        "header_2": "Difficulty",
        "header_3": "Version",
        "header_4": "Merkle Root Hash",
        "header_5": "Timestamp",
        "header_6": "Previous Block Hash",
        "correct": "Correct!",
        "incorrect": "Incorrect",
        "subTitle_1": "2.1 Introduction",
        "subTitle_2": "2.3 Block Header",
        "subTitle_3": "2.2 Block Body",
        "paragraph_1_1": "A single block in a blockchain can usually be divided by the header part and other body parts. For the elements in the header, one example is that the Previous Block Hash in the header, it plays the key role to chain the data block into a blockchain.",
        "paragraph_2_1": "Here is a single block with different elements, could you try to identify and drag the correct elements to the header?",
        "paragraph_2_2": "All elements above is actually parts of the block header, did you get the correct answer? Here is the details of the block header elements usually:",
        "paragraph_2_3": "(1) Difficulty",
        "paragraph_2_3_1": "Difficulty is used to verify the blocks. In Bitcoin, difficulty is used in the Proof of Work algorithm for mining new blocks and it will be updated every 2 weeks.",
        "paragraph_2_4": "(2) Merkle Root Hash",
        "paragraph_2_4_1": "Hash of the root of the transation records merkle tree, it is used for transation data validation. If one of the transation is modified or removed, the merkle root hash will result in a different value.",
        "paragraph_2_5": "(3) Nonce",
        "paragraph_2_5_1": "Number only used once, it is a random number that the miners need to find in order to mine a block using the Proof of Work algorithm, the range of the nonce is between 0 and 4,294,967,296.",
        "paragraph_2_6": "(4) Previous Block Hash",
        "paragraph_2_6_1": "The SHA-256 hash value of the previous block and this is included in every single block. Therefore, changing previous data cannot succeeded as the hash value will dismatch with all subsequent blocks.  Noticed that in Bitcoin, it is the value of the previous block's header hashed value, not the entire block.",
        "paragraph_2_7": "(5) Timestamp",
        "paragraph_2_7_1": "The creation time of the block in second, measured using UNIX epoch.",
        "paragraph_2_8": "(6) Version",
        "paragraph_2_8_1": "A number to track the blockchain protocol, the version that is using in the block.",
        "paragraph_3_1": "Details of the block body elements usually:",
        "paragraph_3_2": "(1) Block ID, the hash value of the block header.",
        "paragraph_3_3": "(2) Index, the height of the block.",
        "paragraph_3_4": "(3) Block Size, the size of the block in bytes.",
        "paragraph_3_5": "Besides of these body elements, a block also contain a block Header, it included several elements which will be mentioned below.",
        "paragraph_3_6": "(4) Transation Counter, the total amount of the transations in the block.",
        "paragraph_3_7": "(5) Transations, all processed transations data in the block."
    },
    "tutorial_3": {
        "title": "3. Block Generation & Mining",
        "subTitle_1": "3.1 Introduction",
        "subTitle_2": "3.2 Consensus Algorithm",
        "subTitle_3": "3.3 Proof-of-Work",
        "paragraph_1_1": "A new block is generated by mining, and mining means miners find the correct nonce using consensus algorithm(e.g. Proof-of-Work) which can satisfy the target diffculty.",
        "paragraph_2_1": "A consensus algorithm is an algorithm that everyone is going to use to make sure everyone agrees on the block generations, different blockchain may use different consensus algorithm. As an example, Bitcoin is using the Proof-of-Work algorithm and Ethereum is using Proof-of-stake algorithm on block mining.",
        "paragraph_3_1": "As an example, giving a difficulty target, Proof-of-Work requires computer hashing random possible nonce values until the result satisfies the difficulty target. To satisfy the difficulty target, the first 'difficulty target' digits of the result must be 0 consecutively.",
        "paragraph_3_2": "Therefore, Proof-of-Work is a basic consensus algorithm which will keep generating random hashing values until satisfaction. Let's see how the difficulty would affect the Proof-of-Work simulation below!",
        "paragraph_3_3": "You may found out that in order to satisfy the higher difficulty target, it requires more times in average, and the result is only rely on your pure luck.",
        "select": "Select the difficulty and check for the result: ",
        "notice": "(Notice that the process time may took more than 1 minute, and you are suggested to try multiple times for a single difficulty!)",
        "result": "Result Value: ",
        "time": "Time used: ",
        "millisecond": " milliseconds"
    },
    "tutorial_4": {
        "title": "4. Blockchain Transaction & Merkle Tree",
        "subTitle_1": "4.1 Introduction",
        "subTitle_2": "4.2 Transactions",
        "subTitle_3": "4.3 Merkle Tree",
        "paragraph_1": "Blockchain transactions does not required any third party organization or application and the data will be permanently inscribed in the corresponding block. Users will be using their public key and private key as the 'address' and 'password' in the blockchain system. For the trasactions data, it will be hashed, encrypted and digital signed before putting into the transaction pool, and waiting for the miners to put it in a new block.",
        "paragraph_2": "Transaction in a blockchain system may based on different model. Transaction models in different blockchain:",
        "paragraph_2_1": "(1) UTXO Model (Unspent Transaction Output), used by the Bitcoin.",
        "paragraph_2_2": "(2) Account/Balance Model, used by the Ethereum.",
        "paragraph_2_3": "In this chapter, UTXO model will be used as the example for explain the transaction mechanism in blockchain.",
        "paragraph_2_4": "For the UTXO model, it can be separated into (1) Basic Transaction; and (2) Consolidate Transaction.",
        "paragraph_2_5": "(1) Basic Transaction",
        "paragraph_2_5_1": "In basic transaction, each transaction can contain multiple inputs and outputs. However, each transaction output can only be spent all at once, users cannot spend only a part of the UTXO. If the total transaction inputs are larger than the desire output to the reciver(s), the remaining will be generated as an transaction output to the original sender. Let's try how the basic transaction works in the below and assuming you are Alice and the target reciever is your best friend, Bob!",
        "paragraph_2_6": "(2) Consolidate Transaction",
        "paragraph_2_6_1": "In consolidate transaction, users can consolidate their UTXO transactions by combining their excisting UTXO transactions as they may have different UTXO transactions. Let's try how the consolidate transaction works in the below and assuming you are Alice who own lots of UTXO transactions.",
        "paragraph_3": "Transactions data is stored in the block as a Merkle Tree pattern. Each node (except for the leaf nodes) stores the hash of their corresponding children, and the root of the Merkle Tree is called Merkle root. By using the merkle tree, user can minimize the required storage for transaction data, the merkle root (and other blockheader components) is sufficient to verify the new block, it is not necessary to use more storage to pull and storge the whole data block.",
        "paragraph_3_1": "Here shows how to generate the Merkle Tree and the Root for the transaction data.",
        "trans1Assume_1": "Lets assume you have an UTXO balance with $ ",
        "trans1Assume_2": "And you owe Bob $ ",
        "trans1Assume_3": "And you have another UTXO balance with $ ",
        "dollars": " dollars.",
        "valid1": "Error! The UTXO balance is not enough!",
        "example": "Here is some examples of the transaction data could be used to test:",
        "example_1": "(1) Input: #1 someone(20) Output: #6 Alice(20) Signed by someone",
        "example_2": "(2) Input: #2 Bob(10) Output: #7 Alice(5) #10 Carol(5) Signed by Bob",
        "example_3": "(3) Input: #3 Carol(100) Output: #8 someone(100) Signed by someone",
        "example_4": "(4) Input: #4 Alice(20) #5 Alice(30) Output: #9 Alice(50) Signed by Alice",
        "H": "Notice that the 'H' here means Hashing, and the 'R' here means the merkle root!" 
    },
    "about": {
        "about": "The Hong Kong PolyTechnic University (PolyU) COMP4913 Capstone Project, 2022-2023, Hui Sze Ming.",
        "title": "Reference Books and Articles for all tutorials content:",
        "reference_1": "[1] A. Gupta, “Introduction to Blockchain,” Chemical engineering progress, vol. 116, no. 9, pp. 37–44, 2020.",
        "reference_2": "[2] A. Narayanan, Bitcoin and cryptocurrency technologies : a comprehensive introduction. Princeton, New Jersey: Princeton University Press, 2016.",
        "reference_3": "[3] D. A. Tran and B. Krishnamachari, “Blockchain in a nutshell,” 2022, doi: 10.48550/arxiv.2205.01091."
    },
    "beginner": {
        "title": "Blockchain Introduction to Beginner.",
        "subTitle_1": "What is the 'Block' and 'Chain' of Blockchain?",
        "subTitle_2": "How does Blockchain works?",
        "subTitle_3": "Where can Blockchain be used?",
        "paragraph_1_1": "In a blockchain system there will be many blocks and each of them is the data. In other words, we pack several data into the same block. For example, a block in the cryptocurrency blockchain system stored transaction data, it is just like a kind of data storage method.",
        "paragraph_1_2": "Beside of the data, a block also contain the a hash value of current block data and a hash value of previous block data, which play the key role to chain each single data block. A hash value is generate by hash function, it is like an unique ID of the corresponding input data, any changes of the inpuit data will result in a very different hash value.",
        "paragraph_1_3": "If someone tries to tamper the data in block X, it will change the 'current hash' value of the block X, and dismatch with the 'previous hash' value of the block Y which should be storing the original hash value of block X, so it can be detected easily. Therefore, each block data can be secure by chaining with other blocks by storing blocks' hash value and the applied encryption algorithm, it is extremly hard to delete or modify any data in blockchain.",
        "paragraph_2_1": "After knowing how the data are stored in the blockchain system securely, now lets talk about how can a blockchain system works normally. A blockchain system requires neither third party company/organization nor central authority. Instead, every node(individual) has a copy of all data blocks.",
        "paragraph_2_2": "For example, let's assume city A is using a blockchain system to store the healthcare data from 100 clinics and 10 hospitals, all nodes(all 100 clinics and 10 hospitals) need to keep a copy of the whole blockchain, starting from the first block to the lastest block, and synchronize the blockchain once there are any new blocks with new healthcare data."
    },
    "quiz": {
        "next": "Next Question",
        "restart": "Restart the Quiz!",
        "finalScore": "Your final score is : ",
        "checkAllAns": "Check Answers",
        "resturnHome": "Return Home",
        "dialogTitle": "Quiz Answers",
        "ans": "Ans: ",
        "dialogClose": "Close",
        "q1": "Q1. Which of the following statement about blockchain is TRUE?",
        "q1_c1": "A",
        "q1_c2": "TRUE",
        "q1_c3": "C",
        "q1_c4": "D",
        "q2": "Q2. Which of the following element does not included in the block header?",
        "q2_c1": "Nonce",
        "q2_c2": "Difficulty",
        "q2_c3": "Transation Counter",
        "q2_c4": "Timestamp",
        "q3": "Q3. Which of the following statement about Hash is TRUE?",
        "q3_c1": "The length of the hash function output is depended on the input value.",
        "q3_c2": "It is easy for hash function to generate the same output with different input value.",
        "q3_c3": "Hashed value can be decrypted into the original value.",
        "q3_c4": "One of the hash function is SHA256.",
        "q4": "Q4. Which of the following statement about difficulty and mining is TRUE?",
        "q4_c1": "Higher difficulty target required greater timespan for the consensus algorithm.",
        "q4_c2": "Ethereum is using the Proof-of-Work algorithm on block mining.",
        "q4_c3": "Higher difficulty target required lower timespan for the consensus algorithm.",
        "q4_c4": "Difficulty target does not affect timespan for the consensus algorithm.",
        "q5": "Q5. Which of the following statement about blockchain transaction is TRUE?",
        "q5_c1": "All blockchain systems are based on the UTXO transaction model.",
        "q5_c2": "Each transaction can contain multiple inputs and outputs.",
        "q5_c3": "Each transaction can contain multiple inputs and one output.",
        "q5_c4": "Each transaction can contain one input and multiple outputs.",
        "q6": "Q6. Which of the following statement about blockchain merkle root/tree is FALSE?",
        "q6_c1": "Having the ability for transaction data verification.",
        "q6_c2": "A Merkle Root is a hashed value.",
        "q6_c3": "Using Merkle Root required lesser disk stroage.",
        "q6_c4": "One of the purposes of using Merkle Root is to ensure the consensus algorithm satisfied the difficulty target."
    }
}