{
    "labels": {
        "home": "主頁",
        "about": "關於",
        "english": "ENG",
        "chinese": "TCN",
        "beginner": "初學者",
        "advanced": "主要教程",
        "quiz": "測驗",
        "start": "開始",
        "tutorial": "教程列表",
        "textFieldLabel": "在這裡輸入...",
        "run": "執行"
    },
    "home": {
        "intro_1": "在這裡認識區塊鏈基礎",
        "intro_2": "BC Amateur.",
        "intro_3": "BC Amateur 是一個網上學習平台，提供學習區塊鏈所需的免費內容。",
        "intro_4": "選擇教程。",
        "description_1": "區塊鏈簡介",
        "description_2": "以比特幣區塊鏈的例子，學習區塊鏈技術背後的核心原理",
        "description_3": "測試你對區塊鏈的認知。每條題目限時30秒"
    },
    "tutorial_1": {
        "title": "1. 雜湊值與雜湊函數",
        "subTitle_1": "1.1 簡介",
        "subTitle_2": "1.2 特性",
        "subTitle_3": "1.3 適用性",
        "paragraph_1_1": "哈希值由哈希函數生成，是一種固定長度的非語義輸出。它就像該特定輸入值的 ID。",
        "paragraph_2_1": "這是一個使用哈希函數 SHA256 的哈希值生成器，讓我們嘗試輸入一些內容並檢查結果！",
        "paragraph_2_2": "你有什麼發現？",
        "paragraph_2_3": "你可能會發現哈希值具有以下特性：",
        "paragraph_2_4": "(1) 固定長度",
        "paragraph_2_4_1": "哈希函數會產生一個固定長度的輸出，這個不受輸入值和輸入值長度的影響。在上面的哈希函數 SHA256 中，它總是產生一個 256 位元(bits) 的輸出值。由於輸出值以十六進制形式表示，一個十六進制數字包含 4 位元(bits)，因此哈希函數 SHA256 輸出的數字長度為 64。",
        "paragraph_2_5": "(2) 抗碰撞性",
        "paragraph_2_5_1": "哈希函數具有抗碰撞性，使用不同輸入的哈希函數（如 SHA-256）不可能找到兩個相同的輸出值。兩個不同的輸入將導致兩個不同的輸出。",
        "paragraph_2_6": "(3) 相同的輸入值總會是相同的輸出值",
        "paragraph_2_6_1": "哈希函數將保證以相同的輸入值生成相同的輸出值。當中例如英文單詞 “hash” 的哈希值（SHA-256）是 'a91069147f9bd9245cdacaef8ead4c3578ed44f179d7eb6bd4690e62ba4658f2'. 在相同的哈希函數下，特定輸入值的輸出結果是恆定的。",
        "paragraph_2_7": "(4) 隱藏性",
        "paragraph_2_7_1": "哈希函數會生成一個不包含任何原始輸入值踪蹟的輸出，使用輸出哈希值是不可能計算或估算出輸入值的，因為哈希函數不是簡單地通過替換字母表來生成值的。",
        "paragraph_3_1": "一個區塊鏈系統在不同的部分應用哈希函數及哈希值，主要部分如下。",
        "paragraph_3_2": "(1) 鏈接區塊",
        "paragraph_3_3": "(2) 雜湊樹",
        "paragraph_3_4": "在其他章節中會有更詳盡的解釋。",
        "hash_value": "輸入內容的哈希值為： "
    },
    "tutorial_2": {
        "title": "2. 區塊鏈基本結構",
        "header_1": "隨機數",
        "header_2": "難度",
        "header_3": "版本",
        "header_4": "哈希樹根",
        "header_5": "時間戳記",
        "header_6": "前哈希值",
        "correct": "正確!",
        "incorrect": "不正確",
        "subTitle_1": "2.1 簡介",
        "subTitle_2": "2.3 區塊頭",
        "subTitle_3": "2.2 區塊體",
        "paragraph_1_1": "區塊鏈中的單個區塊通常可以分為區塊頭和區塊體。對於區塊頭中的元素，一個例子就是區塊頭當中的前哈希值，它起著將數據區塊鏈成區塊鏈的關鍵作用。",
        "paragraph_2_1": "這是一個包含不同元素的區塊，你可以嘗試識別並將正確的元素拖到區塊頭中嗎？",
        "paragraph_2_2": "以上所有元素其實都是區塊頭的一部分，你答對了嗎？ 以下是區塊頭元素的詳細介紹：",
        "paragraph_2_3": "(1) 難度",
        "paragraph_2_3_1": "難度用於驗證區塊。在比特幣中，難度用於挖掘新區塊的工作量證明算法，並且每兩週更新一次。",
        "paragraph_2_4": "(2) 哈希樹根",
        "paragraph_2_4_1": "交易記錄在雜湊樹根的哈希值，用於交易數據的校驗。如果其中一個交易被修改或刪除，雜湊樹根哈希將產生不同的值。",
        "paragraph_2_5": "(3) 隨機數",
        "paragraph_2_5_1": "只使用一次的數字，它是礦工為了使用工作量證明算法挖掘區塊而需要找到的隨機數字，當中隨機數的範圍在 0 到 4,294,967,296 之間。",
        "paragraph_2_6": "(4) 前哈希值",
        "paragraph_2_6_1": "前一個區塊的 SHA-256 哈希值，而且它包含在每個塊中。 因此，更改以前的數據不會成功，因為更改後的哈希值將與所有後續塊的前哈希值不匹配。另外在比特幣中，前哈希值是前一個區塊頭的哈希值，而不是整個區塊的哈希值。",
        "paragraph_2_7": "(5) 時間戳記",
        "paragraph_2_7_1": "區塊的創建時間，以秒為單位，使用 UNIX 時間測量。",
        "paragraph_2_8": "(6) 版本",
        "paragraph_2_8_1": "用於跟踪區塊鏈協議的數字，即區塊中使用的版本。",
        "paragraph_3_1": "區塊體的細節通常包含以下元素：",
        "paragraph_3_2": "(1) 區塊ID, 區塊頭的哈希值。",
        "paragraph_3_3": "(2) 區塊索引, 即區塊的高度。",
        "paragraph_3_4": "(3) 區塊容量大小, 區塊的大小（以字節為單位）。",
        "paragraph_3_5": "除了這些區塊體的元素，一個區塊還包含一個區塊頭，區塊頭包括下面將要提到的幾個元素。",
        "paragraph_3_6": "(4) 交易數量, 區塊中的交易總量。",
        "paragraph_3_7": "(5) 交易資訊, 區塊中所有已處理的交易數據。"
    },
    "tutorial_3": {
        "title": "3. 區塊生成與采掘",
        "subTitle_1": "3.1 簡介",
        "subTitle_2": "3.2 共識算法",
        "subTitle_3": "3.3 工作量證明",
        "paragraph_1_1": "一個新的區塊是由挖礦產生，而挖礦意味著礦工使用共識算法（例如工作量證明）找到正確的隨機數，以滿足目標難度。",
        "paragraph_2_1": "共識算法是指每個人都共同使用的算法，以確保每個人都同意新區塊的生成，不同的區塊鏈可能使用不同的共識算法。例如比特幣使用工作量證明算法，而以太坊使用權益證明算法進行區塊挖掘。",
        "paragraph_3_1": "例如，給予一個難度目標，工作量證明需要電腦用可能的隨機數進行哈希運算直到結果滿足難度目標。滿足難度目標指哈希結果的頭'難度目標'個數字必須連續為0。",
        "paragraph_3_2": "因此，工作量證明是一種基本的共識算法，它會不斷生成隨機哈希值，直到滿足難度目標為止。讓我們看看難度如何影響下面的工作量證明模擬器！",
        "paragraph_3_3": "你可能會發現為了滿足更高難度的目標，電腦需要更多的嘗試次數和時間，結果只能靠你的運氣了。",
        "select": "選擇難度目標並查看結果：",
        "notice": "（注意過程時間可能會超過1分鐘，另外建議同一個難度多試幾次！）",
        "result": "結果哈希值： ",
        "time": "使用時間： ",
        "millisecond": " 毫秒"
    },
    "tutorial_4": {
        "title": "4. 區塊鏈交易與雜湊樹",
        "subTitle_1": "4.1 簡介",
        "subTitle_2": "4.2 交易",
        "subTitle_3": "4.3 雜湊樹",
        "paragraph_1": "區塊鏈交易不需要任何第三方組織或應用程序，數據將永久銘刻在相應的區塊中。用戶將使用他們的公鑰和私鑰作為區塊鏈系統中的“地址”和“密碼”。另外對於交易數據，在放入交易池之前，將進行哈希運算、加密和數字簽名，等待礦工將其放入新的區塊中。",
        "paragraph_2": "區塊鏈系統中的交易可能基於不同的模型。不同區塊鏈中的交易模型：",
        "paragraph_2_1": "(1) UTXO 模型 (Unspent Transaction Output), 比特幣所使用。",
        "paragraph_2_2": "(2) 賬戶餘額模型, 以太坊所使用。",
        "paragraph_2_3": "本章將以 UTXO 模型為例說明區塊鏈中的交易機制。",
        "paragraph_2_4": "對於UTXO模型，可以分為 (1) 基本交易；與 (2)合併交易。",
        "paragraph_2_5": "(1) 基本交易",
        "paragraph_2_5_1": "在基本交易中，每個交易可以包含多個輸入和輸出。但是，每筆交易輸出只能一次全部花費，用戶不能只花費一部分 UTXO 。如果總交易輸入大於期望輸出，剩餘部分將生成為交易輸出給予原本的發送方。讓我們試試下面的基本交易是如何工作的，假設你是 Alice ，而目標接收者是你最好的朋友 Bob ！",
        "paragraph_2_6": "(2) 合併交易",
        "paragraph_2_6_1": "在合併交易中，用戶可以通過合併他們現有的 UTXO 交易來整合他們零碎的 UTXO 交易，因為他們以往可能有大量不同的 UTXO 交易。 讓我們在下面嘗試合併交易的工作原理，並假設您是擁有零碎 UTXO 交易的 Alice。",
        "paragraph_3": "交易數據以雜湊樹模式存儲在區塊中。 每個節點（葉子節點除外）存儲其對應子節點的哈希值，雜湊樹的根稱為雜湊根。通過使用雜湊樹，用戶可以最大限度地減少交易數據所需的存儲，雜湊根（和其他區塊頭組件）足以驗證新區塊，不需要使用更多存儲來拉取和存儲整個數據塊。",
        "paragraph_3_1": "這裡展示瞭如何為交易數據生成雜湊樹和根。",
        "trans1Assume_1": "讓我們假設你有一個 UTXO 餘額 $ ",
        "trans1Assume_2": "你欠 Bob $ ",
        "trans1Assume_3": "你還有另一個 UTXO 餘額 $ ",
        "dollars": " 元.",
        "valid1": "錯誤！ UTXO 餘額不夠！",
        "example": "以下是一些可用於測試的交易數據示例：",
        "example_1": "(1) Input: #1 someone(20) Output: #6 Alice(20) Signed by someone",
        "example_2": "(2) Input: #2 Bob(10) Output: #7 Alice(5) #10 Carol(5) Signed by Bob",
        "example_3": "(3) Input: #3 Carol(100) Output: #8 someone(100) Signed by someone",
        "example_4": "(4) Input: #4 Alice(20) #5 Alice(30) Output: #9 Alice(50) Signed by Alice",
        "H": "請注意，此處的 “H” 表示哈希運算，而此處的 “R” 表示雜湊根！" 
    },
    "about": {
        "about": "The Hong Kong PolyTechnic University (PolyU) COMP4913 Capstone Project, 2022-2023, Hui Sze Ming.",
        "title": "Reference Books and Articles for all tutorials content:",
        "reference_1": "[1] A. Gupta, “Introduction to Blockchain,” Chemical engineering progress, vol. 116, no. 9, pp. 37–44, 2020.",
        "reference_2": "[2] A. Narayanan, Bitcoin and cryptocurrency technologies : a comprehensive introduction. Princeton, New Jersey: Princeton University Press, 2016.",
        "reference_3": "[3] D. A. Tran and B. Krishnamachari, “Blockchain in a nutshell,” 2022, doi: 10.48550/arxiv.2205.01091."
    },
    "beginner": {
        "title": "初學者的區塊鏈簡介",
        "subTitle_1": "甚麼是區塊鏈的 '區塊' 和 '鏈'？",
        "subTitle_2": "區塊鏈如何運作？",
        "subTitle_3": "哪裡可以應用區塊鏈？",
        "paragraph_1_1": "在區塊鏈系統中會有很多區塊，而每個區塊都是數據。換句話說，我們將多個數據打包到同一個區塊中。 例如，加密貨幣區塊鏈系統中的一個區塊存儲著交易數據，區塊鏈就像是一種數據存儲方式。",
        "paragraph_1_2": "一個區塊除了數據之外，還包含當前區塊數據的哈希值和前一個區塊數據的哈希值，它們對鏈接每個單獨的數據塊起著關鍵作用。哈希值是由哈希函數生成的，它就像對應輸入數據的唯一 ID ，輸入數據的任何變化都會導致一個非常不同的哈希值。",
        "paragraph_1_3": "如果有人試圖篡改區塊 X 中的數據，它將改變區塊 X 的 “當前哈希值” ，並與區塊 Y 的 “先前哈希值” 不匹配，該 “先前哈希值” 應該存儲區塊 X 的 “當前哈希值” ， 所以它很容易被檢測到。 因此，通過存儲區塊的哈希值和應用的加密算法，每個區塊數據都可以通過與其他區塊鏈接來保證安全，刪除或修改區塊鏈中的任何數據都極其困難。",
        "paragraph_2_1": "在了解數據是如何安全地存儲在區塊鏈系統中後，現在我們來說說區塊鏈系統是如何正常運行的。區塊鏈系統既不需要第三方公司/組織，也不需要中央機構。相反，每個節點（個人）都有所有數據塊的副本，就像將分類帳分發給同一網絡中的每個人一樣。",
        "paragraph_2_2": "例如，假設 A 市正在使用區塊鏈系統存儲來自 100 家診所和 10 家醫院的醫療保健數據，所有節點（所有 100 家診所和 10 家醫院）需要保留整個區塊鏈的副本，從第一個區塊開始到最新的區塊，並在有任何包含新醫療保健數據的新區塊時同步區塊鏈。",
        "paragraph_3_1": "(1) 加密貨幣和交易系統",
        "paragraph_3_1_1": "談到區塊鏈，我們可能首先想到的是加密貨幣。近年來，加密貨幣區塊鏈系統已經在世界範圍內廣為人知，例如比特幣和以太坊。 借助區塊鏈技術，我們可以實現脫離銀行的安全交易，以及脫離政府的加密貨幣發行。",
        "paragraph_3_2": "(2) 食品供應鏈系統",
        "paragraph_3_2_1": "區塊鏈可以應用於食品供應鏈系統。如今，個人健康和環保已成為消費者選擇產品的重要決定因素。借助區塊鏈技術，我們消費者可以查詢超市中每一種食品從農場到加工廠家的來源。",
        "paragraph_3_3": "(3) 物聯網 (IoT) 系統",
        "paragraph_3_3_1": "區塊鏈系統發展的主要方向之一是物聯網（IoT）。 物聯網（IoT）系統是由許多傳感器、網關和設備組成的分佈式網絡。物聯網系統最大的擔憂之一是在沒有中央控制器/計算機的情況下確保通信安全。因此，能實現去中心化的區塊鏈將是未來物聯網系統發展的一項重要技術。",
        "paragraph_3_4": "(4) 醫療保健系統",
        "paragraph_3_4_1": "區塊鏈也可以應用於醫療保健系統。由於患者的隱私數據非常重要，因此區塊鏈可以存儲醫療保健數據而無需擔心被篡改。同時，在醫療保健系統中使用區塊鏈允許來自不同醫療機構的不同醫生訪問患者的健康歷史，這有助於提高醫療程序的安全性和有效性。",
        "paragraph_3_5": "(5) 其他需要數據完整性和去中心化的系統",
        "paragraph_3_5_1": "消防設備維修記錄系統。為了確保社區安全，開發這個系統可能是個好主意，該系統允許公眾訪問城市中不同建築物的消防設備維護記錄。",
        "paragraph_3_5_2": "機電設備維修記錄系統。同樣地，開發一個讓公眾可以查閱不同大廈升降機保養記錄的系統，亦不失為一個好主意。",
        "paragraph_3_5_3": "下面的地圖組件模擬了消防設備維護記錄系統。假設您在消防部門工作，您的工作是單擊已檢查過的建築物。",
        "map_b1": "建築物 A",
        "map_b2": "建築物 B",
        "map_b3": "建築物 C",
        "map_b4": "建築物 D",
        "map_b5": "建築物 E",
        "map_b6": "建築物 F",
        "map_b7": "建築物 G",
        "checked": "已檢查！",
        "date": " 日期： ",
        "blockHash": "（哈希值） ",
        "blockPrevHash": "（前哈希值） ",
        "blockData": "（區塊數據） ",
        "paragraph_3_5_4": "如上圖組件所示，市民和公司可以查詢不同樓宇消防設備的維修記錄，數據不可修改，也不可刪除。因此，這樣的系統可能有助於提高社會和社區的安全感！"
    },
    "quiz": {
        "next": "下一條問題",
        "restart": "重啟測驗！",
        "finalScore": "你的最終分數是： ",
        "checkAllAns": "檢查答案",
        "resturnHome": "回到首頁",
        "dialogTitle": "測驗答案",
        "ans": "答： ",
        "dialogClose": "關閉",
        "q1": "Q1. 以下哪項關於區塊鏈的陳述是正確的？",
        "q1_c1": "易篡改是區塊鏈最大的問題之一。",
        "q1_c2": "數據塊通過使用哈希值鏈接起來。",
        "q1_c3": "通常區塊鏈系統需要一個中心化的設備來存儲數據。",
        "q1_c4": "基本上，區塊鏈系統等同於加密貨幣系統",
        "q2": "Q2. 以下哪個元素不包含在區塊頭中？",
        "q2_c1": "隨機數",
        "q2_c2": "難度",
        "q2_c3": "交易數量",
        "q2_c4": "時間戳記",
        "q3": "Q3. 以下哪項關於哈希的陳述是正確的？",
        "q3_c1": "哈希函數輸出的長度取決於輸入值。",
        "q3_c2": "哈希函數很容易用不同的輸入值生成相同的輸出。",
        "q3_c3": "哈希值可以被解密為原始輸入值。",
        "q3_c4": "SHA256 是哈希函數之一。",
        "q4": "Q4. 以下哪項關於難度和挖礦的陳述是正確的？",
        "q4_c1": "更高難度的目標需要更長的時間運算共識算法。",
        "q4_c2": "以太坊在區塊挖掘中使用工作量證明算法。",
        "q4_c3": "更高難度的目標需要更短的時間運算共識算法。",
        "q4_c4": "難度目標不影響共識算法的運算時間。",
        "q5": "Q5. 以下哪項關於區塊鏈交易的陳述是正確的？",
        "q5_c1": "所有區塊鏈系統都基於 UTXO 交易模型。",
        "q5_c2": "每筆交易可以包含多個輸入和輸出。",
        "q5_c3": "每筆交易可以包含多個輸入和一個輸出。",
        "q5_c4": "每筆交易可以包含一個輸入和多個輸出。",
        "q6": "Q6. 以下關於區塊鏈雜湊根/樹的陳述哪個是錯誤的？",
        "q6_c1": "具有交易數據驗證能力。",
        "q6_c2": "雜湊根是一個哈希值。",
        "q6_c3": "使用雜湊根需要較少的磁盤存儲空間。",
        "q6_c4": "使用雜湊根的目的之一是確保共識算法滿足難度目標。"
    }
}