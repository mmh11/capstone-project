{
    "labels": {
        "home": "主頁",
        "about": "關於",
        "english": "ENG",
        "chinese": "TCN",
        "beginner": "初學者",
        "advanced": "主要教程",
        "quiz": "測驗",
        "start": "開始",
        "tutorial": "教程列表",
        "textFieldLabel": "在這裡輸入...",
        "run": "執行"
    },
    "home": {
        "intro_1": "在這裡認識區塊鏈基礎",
        "intro_2": "BC Amateur.",
        "intro_3": "BC Amateur 是一個網上學習平台，提供學習區塊鏈所需的免費內容。",
        "intro_4": "選擇教程。",
        "description_1": "區塊鏈簡介",
        "description_2": "以比特幣區塊鏈的例子，學習區塊鏈技術背後的核心原理",
        "description_3": "測試你對區塊鏈的認知。每條題目限時30秒"
    },
    "tutorial_1": {
        "title": "1. 雜湊值與雜湊函數",
        "subTitle_1": "1.1 簡介",
        "subTitle_2": "1.2 特性",
        "subTitle_3": "1.3 適用性",
        "paragraph_1_1": "哈希值由哈希函數生成，是一種固定長度的非語義輸出。它就像該特定輸入值的 ID。",
        "paragraph_2_1": "這是一個使用哈希函數 SHA256 的哈希值生成器，讓我們嘗試輸入一些內容並檢查結果！",
        "paragraph_2_2": "你有什麼發現？",
        "paragraph_2_3": "你可能會發現哈希值具有以下特性：",
        "paragraph_2_4": "(1) 固定長度",
        "paragraph_2_4_1": "哈希函數會產生一個固定長度的輸出，這個不受輸入值和輸入值長度的影響。在上面的哈希函數 SHA256 中，它總是產生一個 256 位元(bits) 的輸出值。由於輸出值以十六進制形式表示，一個十六進制數字包含 4 位元(bits)，因此哈希函數 SHA256 輸出的數字長度為 64。",
        "paragraph_2_5": "(2) 抗碰撞性",
        "paragraph_2_5_1": "哈希函數具有抗碰撞性，使用不同輸入的哈希函數（如 SHA-256）不可能找到兩個相同的輸出值。兩個不同的輸入將導致兩個不同的輸出。",
        "paragraph_2_6": "(3) 相同的輸入值總會是相同的輸出值",
        "paragraph_2_6_1": "哈希函數將保證以相同的輸入值生成相同的輸出值。當中例如英文單詞 “hash” 的哈希值（SHA-256）是 'a91069147f9bd9245cdacaef8ead4c3578ed44f179d7eb6bd4690e62ba4658f2'. 在相同的哈希函數下，特定輸入值的輸出結果是恆定的。",
        "paragraph_2_7": "(4) 隱藏性",
        "paragraph_2_7_1": "哈希函數會生成一個不包含任何原始輸入值踪蹟的輸出，使用輸出哈希值是不可能計算或估算出輸入值的，因為哈希函數不是簡單地通過替換字母表來生成值的。",
        "paragraph_3_1": "一個區塊鏈系統在不同的部分應用哈希函數及哈希值，主要部分如下。",
        "paragraph_3_2": "(1) 鏈接區塊",
        "paragraph_3_3": "(2) 雜湊樹",
        "paragraph_3_4": "在其他章節中會有更詳盡的解釋。",
        "hash_value": "輸入內容的哈希值為： "
    },
    "tutorial_2": {
        "title": "2. 區塊鏈基本結構",
        "header_1": "隨機數",
        "header_2": "難度",
        "header_3": "版本",
        "header_4": "哈希樹根",
        "header_5": "時間戳記",
        "header_6": "前哈希值",
        "correct": "正確!",
        "incorrect": "不正確",
        "subTitle_1": "2.1 簡介",
        "subTitle_2": "2.3 區塊頭",
        "subTitle_3": "2.2 區塊體",
        "paragraph_1_1": "區塊鏈中的單個區塊通常可以分為區塊頭和區塊體。對於區塊頭中的元素，一個例子就是區塊頭當中的前哈希值，它起著將數據區塊鏈成區塊鏈的關鍵作用。",
        "paragraph_2_1": "這是一個包含不同元素的區塊，你可以嘗試識別並將正確的元素拖到區塊頭中嗎？",
        "paragraph_2_2": "以上所有元素其實都是區塊頭的一部分，你答對了嗎？ 以下是區塊頭元素的詳細介紹：",
        "paragraph_2_3": "(1) 難度",
        "paragraph_2_3_1": "難度用於驗證區塊。在比特幣中，難度用於挖掘新區塊的工作量證明算法，並且每兩週更新一次。",
        "paragraph_2_4": "(2) 哈希樹根",
        "paragraph_2_4_1": "交易記錄在雜湊樹根的哈希值，用於交易數據的校驗。如果其中一個交易被修改或刪除，雜湊樹根哈希將產生不同的值。",
        "paragraph_2_5": "(3) 隨機數",
        "paragraph_2_5_1": "只使用一次的數字，它是礦工為了使用工作量證明算法挖掘區塊而需要找到的隨機數字，當中隨機數的範圍在 0 到 4,294,967,296 之間。",
        "paragraph_2_6": "(4) 前哈希值",
        "paragraph_2_6_1": "前一個區塊的 SHA-256 哈希值，而且它包含在每個塊中。 因此，更改以前的數據不會成功，因為更改後的哈希值將與所有後續塊的前哈希值不匹配。另外在比特幣中，前哈希值是前一個區塊頭的哈希值，而不是整個區塊的哈希值。",
        "paragraph_2_7": "(5) 時間戳記",
        "paragraph_2_7_1": "區塊的創建時間，以秒為單位，使用 UNIX 時間測量。",
        "paragraph_2_8": "(6) 版本",
        "paragraph_2_8_1": "用於跟踪區塊鏈協議的數字，即區塊中使用的版本。",
        "paragraph_3_1": "區塊體的細節通常包含以下元素：",
        "paragraph_3_2": "(1) 區塊ID, 區塊頭的哈希值。",
        "paragraph_3_3": "(2) 區塊索引, 即區塊的高度。",
        "paragraph_3_4": "(3) 區塊容量大小, 區塊的大小（以字節為單位）。",
        "paragraph_3_5": "除了這些區塊體的元素，一個區塊還包含一個區塊頭，區塊頭包括下面將要提到的幾個元素。",
        "paragraph_3_6": "(4) 交易數量, 區塊中的交易總量。",
        "paragraph_3_7": "(5) 交易資訊, 區塊中所有已處理的交易數據。"
    },
    "tutorial_3": {
        "title": "3. 區塊生成與采掘"
    },
    "tutorial_4": {
        "title": "4. 區塊鏈交易與雜湊樹"
    },
    "about": {
        "about": "The Hong Kong PolyTechnic University (PolyU) COMP4913 Capstone Project, 2022-2023, Hui Sze Ming.",
        "title": "Reference Books and Articles for all tutorials content:",
        "reference_1": "[1] A. Gupta, “Introduction to Blockchain,” Chemical engineering progress, vol. 116, no. 9, pp. 37–44, 2020.",
        "reference_2": "[2] A. Narayanan, Bitcoin and cryptocurrency technologies : a comprehensive introduction. Princeton, New Jersey: Princeton University Press, 2016.",
        "reference_3": "[3] D. A. Tran and B. Krishnamachari, “Blockchain in a nutshell,” 2022, doi: 10.48550/arxiv.2205.01091."
    }
}